{"version":3,"sources":["components/cards/cards.js","components/charts/charts.js","covidapi/index.js","components/countrypicker/country.js","components/prevention/prevention.js","continent-data/continent-country.js","App.js","serviceWorker.js","index.js","images/logo.png","images/awareness.jpg","images/awareness-2.jpg","images/awareness-3.png"],"names":["DashboardInfo","data","confirmed","recovered","deaths","lastUpdate","style","margin","Grid","container","spacing","justify","item","xs","md","component","Card","CardContent","backgroundColor","color","padding","Typography","variant","gutterBottom","start","end","value","duration","separator","Date","toDateString","useStyles","makeStyles","theme","root","flexGrow","paper","height","width","control","Chart","continentData","classes","barChart","Container","maxWidth","Box","my","className","labels","datasets","label","options","legend","display","Alert","severity","AlertTitle","Object","keys","values","boxWidth","styles","url","fetchData","country","a","covidUrl","axios","get","fetchAllCountries","countries","map","name","fetchCountriesData","Countries","formControl","minWidth","handleCountryChange","useState","setCountries","useEffect","getCountries","FormControl","marginBottom","InputLabel","Select","onChange","e","target","MenuItem","i","key","GridCard","src","awareness","alt","marginTop","awareness2","awareness3","App","state","filterData","result","countryData","datas","CountryCode","TotalConfirmed","TotalRecovered","TotalDeaths","setState","this","isLoading","fetchedData","fetchedCountriesData","isError","Logo","Divider","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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N,GAAM,gBACN,GAAM,aACN,GAAM,UACN,GAAM,SACN,GAAM,SACN,GAAM,SACN,GAAM,gBACN,GAAM,UACN,GAAM,aACN,GAAM,SACN,GAAM,SACN,GAAM,OACN,GAAM,SACN,GAAM,OACN,GAAM,SACN,GAAM,SACN,GAAM,SACN,GAAM,UACN,GAAM,SACN,GAAM,gBACN,GAAM,gBACN,GAAM,gBACN,GAAM,UACN,GAAM,gBACN,GAAM,SACN,GAAM,gBACN,GAAM,gBACN,GAAM,aACN,GAAM,SACN,GAAM,gBACN,GAAM,OACN,GAAM,SACN,GAAM,SACN,GAAM,OACN,GAAM,OACN,GAAM,OACN,GAAM,OACN,GAAM,SACN,GAAM,OACN,GAAM,SACN,GAAM,SACN,GAAM,SACN,GAAM,gBACN,GAAM,OACN,GAAM,OACN,GAAM,OACN,GAAM,SACN,GAAM,OACN,GAAM,OACN,GAAM,OACN,GAAM,OACN,GAAM,OACN,GAAM,OACN,GAAM,SACN,GAAM,SACN,GAAM,SACN,GAAM,SACN,GAAM,SACN,GAAM,SACN,GAAM,SACN,GAAM,OACN,GAAM,SACN,GAAM,SACN,GAAM,OACN,GAAM,OACN,GAAM,SACN,GAAM,SACN,GAAM,gBACN,GAAM,SACN,GAAM,SACN,GAAM,gBACN,GAAM,SACN,GAAM,OACN,GAAM,SACN,GAAM,SACN,GAAM,gBACN,GAAM,SACN,GAAM,SACN,GAAM,OACN,GAAM,SACN,GAAM,UACN,GAAM,OACN,GAAM,SACN,GAAM,gBACN,GAAM,gBACN,GAAM,gBACN,GAAM,gBACN,GAAM,gBACN,GAAM,UACN,GAAM,UACN,GAAM,UACN,GAAM,gBACN,GAAM,SACN,GAAM,SACN,GAAM,UACN,GAAM,UACN,GAAM,SACN,GAAM,UACN,GAAM,gBACN,GAAM,UACN,GAAM,UACN,GAAM,UACN,GAAM,OACN,GAAM,gBACN,GAAM,UACN,GAAM,gBACN,GAAM,gBACN,GAAM,OACN,GAAM,UACN,GAAM,SACN,GAAM,SACN,GAAM,SACN,GAAM,OACN,GAAM,gBACN,GAAM,OACN,GAAM,SACN,GAAM,SACN,GAAM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","file":"static/js/main.44acd2d9.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\n\r\nconst DashboardInfo = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return '';\r\n  }\r\n\r\n  return (\r\n    <div style={{ margin: \"50px\" }}>\r\n\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid item xs={12} md={3} component={Card} >\r\n          <CardContent style={{ backgroundColor: 'orange', color: \"White\", padding: 20 }}>\r\n            <Typography variant=\"h5\" color=\"White\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h4\" component=\"h2\">\r\n              <CountUp start={0} end={confirmed.value} duration={2.75} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"White\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} component={Card}>\r\n          <CardContent style={{ backgroundColor: \"green\", color: \"White\", padding: 20 }}>\r\n            <Typography variant=\"h5\" color=\"white\" gutterBottom>\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h4\" component=\"h2\">\r\n              <CountUp start={0} end={recovered.value} duration={2.75} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"white\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} component={Card}>\r\n          <CardContent style={{ backgroundColor: \"red\", color: \"White\", padding: 20 }}>\r\n            <Typography variant=\"h5\" color=\"white\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h4\" component=\"h2\">\r\n              <CountUp start={0} end={deaths.value} duration={2.75} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"white\" >\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default DashboardInfo;","import React from 'react';\r\nimport { Pie, Bar, } from 'react-chartjs-2';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport styles from './charts.css';\r\nimport { Grid, Container, Box } from '@material-ui/core';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  paper: {\r\n    height: 140,\r\n    width: 100,\r\n  },\r\n  control: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, continentData }) => {\r\n  const classes = useStyles();\r\n  const barChart = (\r\n    confirmed ? (\r\n\r\n      <Container maxWidth=\"md\">\r\n        <Box my={4}>\r\n          <Grid container spacing={2} className={classes.root}>\r\n            <Grid item xs={12}>\r\n              <Bar\r\n                data={{\r\n                  labels: ['Infected', 'Recovered', 'Deaths'],\r\n                  datasets: [\r\n                    {\r\n                      label: 'Total infected People',\r\n                      backgroundColor: ['orange', 'green', 'red'],\r\n                      data: [confirmed.value, recovered.value, deaths.value],\r\n                    },\r\n                  ],\r\n                }}\r\n                options={{\r\n                  legend: { display: false },\r\n\r\n                }}\r\n              />\r\n            </Grid>\r\n            {!continentData && <div>\r\n              <Alert variant=\"outlined\" severity=\"error\">\r\n                <AlertTitle><strong>Error</strong></AlertTitle>\r\n            Error in loading pie chart component.\r\n          </Alert>\r\n            </div>}\r\n            {continentData && (\r\n              <Grid item xs={12}>\r\n                <Alert severity=\"info\">\r\n                  Pie denotes the number of active cases still present across the world.\r\n            </Alert>\r\n                <Pie\r\n                  data={{\r\n                    labels: Object.keys(continentData),\r\n                    datasets: [\r\n                      {\r\n                        label: 'Continent',\r\n                        backgroundColor: ['orange', 'purple', 'red', 'yellow', 'brown', 'blue'],\r\n                        data: Object.values(continentData),\r\n                      },\r\n                    ],\r\n                  }}\r\n                  options={{\r\n                    legend: { display: true },\r\n                    labels: {\r\n                      boxWidth: 10\r\n                    }\r\n\r\n                  }}\r\n                />\r\n              </Grid>)}\r\n          </Grid>\r\n        </Box>\r\n      </Container>\r\n\r\n    ) : null\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        {barChart}\r\n      </div>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chart;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\nconst country_url = 'https://api.covid19api.com/summary';\r\n\r\nexport const fetchData = async (country) => {\r\n  let covidUrl = url;\r\n\r\n  if (country) {\r\n    covidUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(covidUrl);\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchCovidData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchAllCountries = async () => {\r\n  try {\r\n    const { data: { countries } } = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchCountriesData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${country_url}`);\r\n    return data.Countries\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { FormControl } from '@material-ui/core';\r\nimport Select from '@material-ui/core/Select';\r\nimport { fetchAllCountries } from '../../covidapi';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 140,\r\n  }\r\n}));\r\nconst Countries = ({ handleCountryChange }) => {\r\n  const [countries, setCountries] = useState([]);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    const getCountries = async () => {\r\n      setCountries(await fetchAllCountries());\r\n    };\r\n\r\n    getCountries();\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <FormControl style={{ width: \"300px\", marginBottom: 20 }} variant=\"outlined\" className={classes.formControl}>\r\n          <InputLabel>WorldWide</InputLabel>\r\n          <Select label=\"country\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n            <MenuItem value=\"\"><em>WorldWide</em></MenuItem>\r\n            {countries.map((country, i) => <MenuItem key={i} value={country}>{country}</MenuItem>)}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n    </Grid>\r\n\r\n  );\r\n};\r\n\r\nexport default Countries;","import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport awareness from '../../images/awareness.jpg';\r\nimport awareness2 from '../../images/awareness-2.jpg';\r\nimport awareness3 from '../../images/awareness-3.png';\r\n\r\nexport default function GridCard() {\r\n  return (\r\n    <Grid container justify=\"center\">\r\n      <Grid item>\r\n        <img src={awareness} alt=\"preventive measure 1\" style={{ width: '80%', marginTop: 30 }} />\r\n      </Grid>\r\n      <Grid item>\r\n        <img src={awareness2} alt=\"preventive measure 2\" style={{ width: '80%', marginTop: 30 }} />\r\n      </Grid>\r\n      <Grid item>\r\n        <img src={awareness3} alt=\"preventive measure 3\" style={{ width: '80%', marginTop: 30 }} />\r\n      </Grid>\r\n    </Grid>\r\n\r\n  );\r\n}\r\n","/**\r\n * Helper data for country-code and continent mapping\r\n */\r\nconst countryData = {\r\n    \"AF\": \"Asia\",\r\n    \"AL\": \"Europe\",\r\n    \"AQ\": \"Antarctica\",\r\n    \"DZ\": \"Africa\",\r\n    \"AS\": \"Oceania\",\r\n    \"AD\": \"Europe\",\r\n    \"AO\": \"Africa\",\r\n    \"AG\": \"North America\",\r\n    \"AZ\": \"Asia\",\r\n    \"AR\": \"South America\",\r\n    \"AU\": \"Oceania\",\r\n    \"AT\": \"Europe\",\r\n    \"BS\": \"North America\",\r\n    \"BH\": \"Asia\",\r\n    \"BD\": \"Asia\",\r\n    \"AM\": \"Asia\",\r\n    \"BB\": \"North America\",\r\n    \"BE\": \"Europe\",\r\n    \"BM\": \"North America\",\r\n    \"BT\": \"Asia\",\r\n    \"BO\": \"South America\",\r\n    \"BA\": \"Europe\",\r\n    \"BW\": \"Africa\",\r\n    \"BV\": \"Antarctica\",\r\n    \"BR\": \"South America\",\r\n    \"BZ\": \"North America\",\r\n    \"IO\": \"Asia\",\r\n    \"SB\": \"Oceania\",\r\n    \"VG\": \"North America\",\r\n    \"BN\": \"Asia\",\r\n    \"BG\": \"Europe\",\r\n    \"MM\": \"Asia\",\r\n    \"BI\": \"Africa\",\r\n    \"BY\": \"Europe\",\r\n    \"KH\": \"Asia\",\r\n    \"CM\": \"Africa\",\r\n    \"CA\": \"North America\",\r\n    \"CV\": \"Africa\",\r\n    \"KY\": \"North America\",\r\n    \"CF\": \"Africa\",\r\n    \"LK\": \"Asia\",\r\n    \"TD\": \"Africa\",\r\n    \"CL\": \"South America\",\r\n    \"CN\": \"Asia\",\r\n    \"TW\": \"Asia\",\r\n    \"CX\": \"Asia\",\r\n    \"CC\": \"Asia\",\r\n    \"CO\": \"South America\",\r\n    \"KM\": \"Africa\",\r\n    \"YT\": \"Africa\",\r\n    \"CG\": \"Africa\",\r\n    \"CD\": \"Africa\",\r\n    \"CK\": \"Oceania\",\r\n    \"CR\": \"North America\",\r\n    \"HR\": \"Europe\",\r\n    \"CU\": \"North America\",\r\n    \"CY\": \"Asia\",\r\n    \"CZ\": \"Europe\",\r\n    \"BJ\": \"Africa\",\r\n    \"DK\": \"Europe\",\r\n    \"DM\": \"North America\",\r\n    \"DO\": \"North America\",\r\n    \"EC\": \"South America\",\r\n    \"SV\": \"North America\",\r\n    \"GQ\": \"Africa\",\r\n    \"ET\": \"Africa\",\r\n    \"ER\": \"Africa\",\r\n    \"EE\": \"Europe\",\r\n    \"FO\": \"Europe\",\r\n    \"FK\": \"South America\",\r\n    \"GS\": \"Antarctica\",\r\n    \"FJ\": \"Oceania\",\r\n    \"FI\": \"Europe\",\r\n    \"AX\": \"Europe\",\r\n    \"FR\": \"Europe\",\r\n    \"GF\": \"South America\",\r\n    \"PF\": \"Oceania\",\r\n    \"TF\": \"Antarctica\",\r\n    \"DJ\": \"Africa\",\r\n    \"GA\": \"Africa\",\r\n    \"GE\": \"Asia\",\r\n    \"GM\": \"Africa\",\r\n    \"PS\": \"Asia\",\r\n    \"DE\": \"Europe\",\r\n    \"GH\": \"Africa\",\r\n    \"GI\": \"Europe\",\r\n    \"KI\": \"Oceania\",\r\n    \"GR\": \"Europe\",\r\n    \"GL\": \"North America\",\r\n    \"GD\": \"North America\",\r\n    \"GP\": \"North America\",\r\n    \"GU\": \"Oceania\",\r\n    \"GT\": \"North America\",\r\n    \"GN\": \"Africa\",\r\n    \"GY\": \"South America\",\r\n    \"HT\": \"North America\",\r\n    \"HM\": \"Antarctica\",\r\n    \"VA\": \"Europe\",\r\n    \"HN\": \"North America\",\r\n    \"HK\": \"Asia\",\r\n    \"HU\": \"Europe\",\r\n    \"IS\": \"Europe\",\r\n    \"IN\": \"Asia\",\r\n    \"ID\": \"Asia\",\r\n    \"IR\": \"Asia\",\r\n    \"IQ\": \"Asia\",\r\n    \"IE\": \"Europe\",\r\n    \"IL\": \"Asia\",\r\n    \"IT\": \"Europe\",\r\n    \"XK\": \"Europe\",\r\n    \"CI\": \"Africa\",\r\n    \"JM\": \"North America\",\r\n    \"JP\": \"Asia\",\r\n    \"KZ\": \"Asia\",\r\n    \"JO\": \"Asia\",\r\n    \"KE\": \"Africa\",\r\n    \"KP\": \"Asia\",\r\n    \"KR\": \"Asia\",\r\n    \"KW\": \"Asia\",\r\n    \"KG\": \"Asia\",\r\n    \"LA\": \"Asia\",\r\n    \"LB\": \"Asia\",\r\n    \"LS\": \"Africa\",\r\n    \"LV\": \"Europe\",\r\n    \"LR\": \"Africa\",\r\n    \"LY\": \"Africa\",\r\n    \"LI\": \"Europe\",\r\n    \"LT\": \"Europe\",\r\n    \"LU\": \"Europe\",\r\n    \"MO\": \"Asia\",\r\n    \"MG\": \"Africa\",\r\n    \"MW\": \"Africa\",\r\n    \"MY\": \"Asia\",\r\n    \"MV\": \"Asia\",\r\n    \"ML\": \"Africa\",\r\n    \"MT\": \"Europe\",\r\n    \"MQ\": \"North America\",\r\n    \"MR\": \"Africa\",\r\n    \"MU\": \"Africa\",\r\n    \"MX\": \"North America\",\r\n    \"MC\": \"Europe\",\r\n    \"MN\": \"Asia\",\r\n    \"MD\": \"Europe\",\r\n    \"ME\": \"Europe\",\r\n    \"MS\": \"North America\",\r\n    \"MA\": \"Africa\",\r\n    \"MZ\": \"Africa\",\r\n    \"OM\": \"Asia\",\r\n    \"NA\": \"Africa\",\r\n    \"NR\": \"Oceania\",\r\n    \"NP\": \"Asia\",\r\n    \"NL\": \"Europe\",\r\n    \"AN\": \"North America\",\r\n    \"CW\": \"North America\",\r\n    \"AW\": \"North America\",\r\n    \"SX\": \"North America\",\r\n    \"BQ\": \"North America\",\r\n    \"NC\": \"Oceania\",\r\n    \"VU\": \"Oceania\",\r\n    \"NZ\": \"Oceania\",\r\n    \"NI\": \"North America\",\r\n    \"NE\": \"Africa\",\r\n    \"NG\": \"Africa\",\r\n    \"NU\": \"Oceania\",\r\n    \"NF\": \"Oceania\",\r\n    \"NO\": \"Europe\",\r\n    \"MP\": \"Oceania\",\r\n    \"UM\": \"North America\",\r\n    \"FM\": \"Oceania\",\r\n    \"MH\": \"Oceania\",\r\n    \"PW\": \"Oceania\",\r\n    \"PK\": \"Asia\",\r\n    \"PA\": \"North America\",\r\n    \"PG\": \"Oceania\",\r\n    \"PY\": \"South America\",\r\n    \"PE\": \"South America\",\r\n    \"PH\": \"Asia\",\r\n    \"PN\": \"Oceania\",\r\n    \"PL\": \"Europe\",\r\n    \"PT\": \"Europe\",\r\n    \"GW\": \"Africa\",\r\n    \"TL\": \"Asia\",\r\n    \"PR\": \"North America\",\r\n    \"QA\": \"Asia\",\r\n    \"RE\": \"Africa\",\r\n    \"RO\": \"Europe\",\r\n    \"RU\": \"Asia\",\r\n    \"RW\": \"Africa\",\r\n    \"BL\": \"North America\",\r\n    \"SH\": \"Africa\",\r\n    \"KN\": \"North America\",\r\n    \"AI\": \"North America\",\r\n    \"LC\": \"North America\",\r\n    \"MF\": \"North America\",\r\n    \"PM\": \"North America\",\r\n    \"VC\": \"North America\",\r\n    \"SM\": \"Europe\",\r\n    \"ST\": \"Africa\",\r\n    \"SA\": \"Asia\",\r\n    \"SN\": \"Africa\",\r\n    \"RS\": \"Europe\",\r\n    \"SC\": \"Africa\",\r\n    \"SL\": \"Africa\",\r\n    \"SG\": \"Asia\",\r\n    \"SK\": \"Europe\",\r\n    \"VN\": \"Asia\",\r\n    \"SI\": \"Europe\",\r\n    \"SO\": \"Africa\",\r\n    \"ZA\": \"Africa\",\r\n    \"ZW\": \"Africa\",\r\n    \"ES\": \"Europe\",\r\n    \"SS\": \"Africa\",\r\n    \"EH\": \"Africa\",\r\n    \"SD\": \"Africa\",\r\n    \"SR\": \"South America\",\r\n    \"SJ\": \"Europe\",\r\n    \"SZ\": \"Africa\",\r\n    \"SE\": \"Europe\",\r\n    \"CH\": \"Europe\",\r\n    \"SY\": \"Asia\",\r\n    \"TJ\": \"Asia\",\r\n    \"TH\": \"Asia\",\r\n    \"TG\": \"Africa\",\r\n    \"TK\": \"Oceania\",\r\n    \"TO\": \"Oceania\",\r\n    \"TT\": \"North America\",\r\n    \"AE\": \"Asia\",\r\n    \"TN\": \"Africa\",\r\n    \"TR\": \"Asia\",\r\n    \"TM\": \"Asia\",\r\n    \"TC\": \"North America\",\r\n    \"TV\": \"Oceania\",\r\n    \"UG\": \"Africa\",\r\n    \"UA\": \"Europe\",\r\n    \"MK\": \"Europe\",\r\n    \"EG\": \"Africa\",\r\n    \"GB\": \"Europe\",\r\n    \"GG\": \"Europe\",\r\n    \"JE\": \"Europe\",\r\n    \"IM\": \"Europe\",\r\n    \"TZ\": \"Africa\",\r\n    \"US\": \"North America\",\r\n    \"VI\": \"North America\",\r\n    \"BF\": \"Africa\",\r\n    \"UY\": \"South America\",\r\n    \"UZ\": \"Asia\",\r\n    \"VE\": \"South America\",\r\n    \"WF\": \"Oceania\",\r\n    \"WS\": \"Oceania\",\r\n    \"YE\": \"Asia\",\r\n    \"ZM\": \"Africa\",\r\n    \"XX\": \"Oceania\",\r\n    \"XE\": \"Asia\",\r\n    \"XD\": \"Asia\",\r\n    \"XS\": \"Asia\"\r\n}\r\n\r\n\r\n\r\nexport default { countryData };","import React from 'react';\nimport './styles.css'\nimport Logo from './images/logo.png'\nimport Cards from './components/cards/cards'\nimport Chart from './components/charts/charts'\nimport Country from './components/countrypicker/country'\nimport { fetchData, fetchCountriesData } from './covidapi'\nimport Prevention from './components/prevention/prevention'\nimport datas from './continent-data/continent-country'\nimport { Grid, Divider } from '@material-ui/core';\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: '',\n    continentData: []\n  }\n\n  /**\n   * helper function for creating data of pie chart.\n   */\n  filterData = (data) => {\n\n    if (data) {\n      const result = {};\n      const { countryData } = datas\n      data.map(country => {\n        if (result[countryData[country.CountryCode]]) {\n          result[countryData[country.CountryCode]] = (country.TotalConfirmed - country.TotalRecovered - country.TotalDeaths) + result[countryData[country.CountryCode]];\n        }\n        else {\n          result[countryData[country.CountryCode]] = country.TotalConfirmed - country.TotalRecovered - country.TotalDeaths\n        }\n\n      })\n      return result;\n    }\n\n  }\n\n  async componentDidMount() {\n    this.setState({ isLoading: true });\n    const fetchedData = await fetchData();\n    const fetchedCountriesData = await fetchCountriesData();\n    const data = this.filterData(fetchedCountriesData);\n    this.setState({ data: fetchedData, continentData: data });\n\n  }\n\n  handleCountryChange = async (country) => {\n    const data = await fetchData(country);\n    this.setState({ data, country: country });\n  }\n\n  render() {\n    const { data, country, continentData, isLoading, isError } = this.state\n    return (\n      <div className=\"app\">\n        <Grid justify=\"center\">\n          <img src={Logo} alt=\"logo\" style={{ maxWidth: 340, padding: 20 }} />\n        </Grid>\n        <Divider />\n        <Cards data={data} />\n\n        <Country handleCountryChange={this.handleCountryChange} />\n        <Divider />\n        <Chart data={data} country={country} continentData={continentData} isLoading={isLoading} isError={isError} />\n        <Divider />\n        <Prevention />\n\n      </div>\n\n    )\n  }\n\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.2e5fd58c.png\";","module.exports = __webpack_public_path__ + \"static/media/awareness.790524f5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/awareness-2.71c5c79d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/awareness-3.1458a473.png\";"],"sourceRoot":""}